{"version":3,"sources":["asserts/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Trailer/TrailerPresenter.js","Routes/Trailer/index.js","Routes/Trailer/TrailerContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResult","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","movieResults","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","TrailerPresenter_templateObject","VideoPlayer","YouTube","TrailerPresenter_templateObject2","youtubeOpts","height","width","playerVars","autoplay","VideoListContainer","TrailerPresenter_templateObject3","VideoList","TrailerPresenter_templateObject4","VideoName","TrailerPresenter_templateObject5","TrailerPresenter","result","trailerId","TrailerPresenter_Container","videoId","opts","videos","video","name","TrailerContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","filter","rs","_this2","Trailer_TrailerPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainr","_templateObject7","_templateObject8","Imdb","_templateObject9","Divider","_templateObject10","VideoDataContainer","_templateObject11","TrailerVideo","_templateObject12","CompanyContainer","_templateObject13","Company","_templateObject14","Companylogo","_templateObject15","Companyname","_templateObject16","Overview","_templateObject17","SeasonContainer","_templateObject18","Season","_templateObject19","SeasonPoster","_templateObject20","SeasonName","_templateObject21","DetailPresenter","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","index","overview","imdb_id","href","production_companies","company","logo_path","seasons","season","DetailContainer","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","Trailer","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.dab0aaab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px, 1px, 5px, 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => (props.current ? \"red\" : \"transparent\")};\n  transition: border-bottom, 0.7s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\" && true}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\" && true}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\" && true}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"loading\">\n      😅\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\nMessage.propTypes = {\n  text: Proptypes.string.isRequired,\n  color: Proptypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n  background-image: url(${props => props.bgUrl});\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n        opacity 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../asserts/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  padding-top: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"upcoming Playing\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"popular Playing\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"9f231c14b69eff6beae07cc46d4e1286\",\n    language: \"en-Us\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie Infomation\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        popular={popular}\n        upcoming={upcoming}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Tv Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Show\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResult,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movie or TV Show....\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResult.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Tv Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResult &&\n      tvResults.length === 0 &&\n      movieResult.length === 0 && (\n        <Message text=\"Nothing found\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","//import SearchPresenter from \"./SearchPresenter\";\nimport SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find result\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport YouTube from \"react-youtube\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 20px;\n  display: flex;\n`;\n\nconst VideoPlayer = styled(YouTube)`\n  width: 70vw;\n  height: 100%;\n`;\n\nconst youtubeOpts = {\n  height: \"100%\",\n  width: \"100%\",\n  playerVars: {\n    autoplay: 1\n  }\n};\n\nconst VideoListContainer = styled.ul`\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n`;\n\nconst VideoList = styled.li`\n  border-bottom: 1px solid gray;\n  padding: 30px 0;\n  &:hover {\n    background-color: grey;\n  }\n`;\nconst VideoName = styled(Link)`\n  font-size: 15px;\n  overflow: hidden;\n  padding-left: 5px;\n`;\n\nconst TrailerPresenter = ({ result, loading, error, pathname, trailerId }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text={error} color=\"#fff\" />\n  ) : (\n    <>\n      <Helmet>\n        <title>{result.original_title}</title>\n      </Helmet>\n      <Container>\n        <VideoPlayer videoId={trailerId} opts={youtubeOpts} />\n        <VideoListContainer>\n          {result.videos.results.map(video => (\n            <VideoList key={video.id}>\n              <VideoName to={`${pathname}/${video.key}`}>\n                {video.name}\n              </VideoName>\n            </VideoList>\n          ))}\n        </VideoListContainer>\n      </Container>\n    </>\n  );\n\nTrailerPresenter.propTypes = {\n  name: PropTypes.string,\n  video: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TrailerPresenter;\n","import TrailerContainer from \"./TrailerContainer\";\n\nexport default TrailerContainer;\n","import React from \"react\";\nimport TrailerPresenter from \"./TrailerPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: Object,\n      error: null,\n      loading: true,\n      pathname: pathname,\n      isMovie: pathname.includes(\"m\"),\n      trailerId: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find AnyThing\" });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n        trailerId: result.videos.results[0].key\n      });\n    }\n  }\n\n  async componentWillReceiveProps(props) {\n    const {\n      location: { pathname }\n    } = props;\n    this.state.result.videos.results.filter(\n      rs =>\n        rs.key === pathname.substring(23) &&\n        this.setState({\n          trailerId: rs.key\n        })\n    );\n  }\n\n  render() {\n    const { result, loading, error, pathname, trailerId } = this.state;\n    return (\n      <TrailerPresenter\n        result={result}\n        loading={loading}\n        error={error}\n        pathname={pathname}\n        trailerId={trailerId}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"Components/Loader\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Message from \"../../Components/Message\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainr = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Imdb = styled.a`\n  font-weight: 500;\n  color: skyblue;\n  font-size: 20px;\n`;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst VideoDataContainer = styled.div`\n  margin-top: 10px;\n`;\n\nconst TrailerVideo = styled.span`\n  margin: 10px 0px;\n  font-size: 20px;\n  color: skyblue;\n`;\n\nconst CompanyContainer = styled.div`\n  width: 100%;\n  background-color: #cacaca59;\n  display: flex;\n  height: 260px;\n  margin-top: 20px;\n`;\n\nconst Company = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px;\n  width: 200px;\n`;\n\nconst Companylogo = styled.div`\n  background-image: url(${props => props.bgImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center center;\n  width: 200px;\n  height: 250px;\n`;\n\nconst Companyname = styled.div`\n  padding-top: 5px;\n  text-align: center;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst SeasonContainer = styled.div`\n  width: 100%;\n  background-color: #cacaca59;\n  display: flex;\n  height: 260px;\n  margin-top: 20px;\n  overflow: scroll;\n`;\n\nconst Season = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n`;\nconst SeasonPoster = styled.div`\n  margin-top: 15px;\n  background-image: url(${props => props.bgImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center center;\n  width: 200px;\n  height: 210px;\n`;\nconst SeasonName = styled.div`\n  padding-top: 10px;\n  text-align: center;\n`;\n\nconst DetailPresenter = ({ result, loading, error, isMovie }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={\n          result.poster_path\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : \"\"\n        }\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../asserts/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainr>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>﹒</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>﹒</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genres, index) =>\n                  index === result.genres.length - 1\n                    ? genres.name\n                    : `${genres.name} / `\n                )}\n            </Item>\n          </ItemContainr>\n          <Overview>{result.overview}</Overview>\n          <VideoDataContainer>\n            {result.imdb_id && (\n              <>\n                <Imdb\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                  target=\"_blank\"\n                >\n                  DB-link\n                </Imdb>\n                <Divider>﹒</Divider>\n              </>\n            )}\n            {result.videos && (\n              <TrailerVideo>\n                <Link to={`/trailer/${result.id}/type=${isMovie}`}>\n                  TrailerVideo\n                </Link>\n              </TrailerVideo>\n            )}\n          </VideoDataContainer>\n\n          {result.production_companies &&\n            result.production_companies.length > 1 && (\n              <CompanyContainer>\n                {result.production_companies.map(company => (\n                  <Company key={company.id}>\n                    <Companylogo\n                      bgImage={\n                        company.logo_path\n                          ? `https://image.tmdb.org/t/p/w200${\n                              company.logo_path\n                            }`\n                          : require(\"../../asserts/noPosterSmall.png\")\n                      }\n                    />\n                    <Companyname>{company.name}</Companyname>\n                  </Company>\n                ))}\n              </CompanyContainer>\n            )}\n\n          {result.seasons && result.seasons.length > 1 && (\n            <SeasonContainer>\n              {result.seasons.map(season => (\n                <Season>\n                  <SeasonPoster\n                    bgImage={\n                      season.poster_path\n                        ? `https://image.tmdb.org/t/p/w200${season.poster_path}`\n                        : require(\"../../asserts/noPosterSmall.png\")\n                    }\n                  />\n                  <SeasonName>{season.name}</SeasonName>\n                </Season>\n              ))}\n            </SeasonContainer>\n          )}\n        </Data>\n      </Content>\n      {error && <Message error={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: Object,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find AnyThing\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading, isMovie } = this.state;\n\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        isMovie={isMovie ? \"m\" : \"t\"}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Trailer from \"Routes/Trailer\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/trailer/:id\" component={Trailer} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration:none;\n        color : inherit;\n    }\n    * {\n        box-sizing:border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color: white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyle from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}